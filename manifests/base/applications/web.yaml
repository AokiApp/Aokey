apiVersion: v1
kind: Secret
metadata:
  name: misskey-web-secret
  namespace: misskey
type: Opaque
# data:
#   POSTGRES_PASSWORD: example-misskey-pass
#   # DATABASE_PASSWORD=${POSTGRES_PASSWORD}
#   POSTGRES_USER: example-misskey-user
#   # DATABASE_USER=${POSTGRES_USER}
#   POSTGRES_DB: misskey
#   # DATABASE_DB=${POSTGRES_DB}
#   DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: misskey
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: misskey/misskey:latest
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health # Replace with your web service health endpoint
              port: 3000
          envFrom:
            - secretRef:
                name: misskey-web-secret
          volumeMounts:
            - name: misskey-files
              mountPath: /misskey/files
            - name: misskey-config
              mountPath: /misskey/.config
      volumes:
        - name: misskey-config
          configMap:
            name: misskey-web-config
      securityContext:
        fsGroup: 991
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: misskey
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
